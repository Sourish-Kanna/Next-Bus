name: Flutter

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'

      # Install dependencies
      - run: flutter pub get

      # Get the latest Git tag
      - name: Get Latest Git Tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")  # Fallback if no tags are found
          echo "Latest tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV


      # Increment the version
      - name: Increment Version
        id: increment_version
        run: |
          VERSION_TAG=${{ env.TAG }}
          VERSION_NUMBER=${VERSION_TAG:1}  # Remove the 'v' prefix
          VERSION_PARTS=(${VERSION_NUMBER//./ })  # Split into array based on '.'
          PATCH_VERSION=${VERSION_PARTS[2]}
          PATCH_VERSION=$((PATCH_VERSION + 1))  # Increment patch version
          NEW_VERSION="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
          echo "New Version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Build the app
      - name: Build the app
        run: flutter build apk --release --build-name ${{ env.NEW_VERSION }} --build-number $(( $GITHUB_RUN_NUMBER + 1 ))


      # Upload APK to GitHub Release
      - name: Upload APK to GitHub Release
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/release/app-release.apk

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

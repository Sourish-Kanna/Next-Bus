name: Flutter Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: flutter-apk

      # Fetch the latest tag
      - name: Fetch Tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all history is fetched
      - run: git fetch --tags

      - name: Get Latest Tag
        id: get_tag
        run: echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      # Generate release notes from commit messages
      - name: Generate Release Notes
        id: generate_release_notes
        run: |
          echo "# Release Notes for ${{ env.LATEST_TAG }}" > release_notes.md
          echo "" >> release_notes.md
          git log --oneline --no-merges ${{ github.event.pull_request.base.sha }}..HEAD | while read line; do
            echo "- $line" >> release_notes.md
          done

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST_TAG }}
          release_name: Release ${{ env.LATEST_TAG }}
          body_path: release_notes.md
          draft: true
          prerelease: false

      # Upload APK to Release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "Next-Bus-${{ env.LATEST_TAG }}.apk"
          asset_name: "Next-Bus-${{ env.LATEST_TAG }}.apk"
          asset_content_type: application/vnd.android.package-archive
